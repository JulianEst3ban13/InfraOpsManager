<VirtualHost *:80>
    ServerName mantenimiento.loc
    ServerAlias www.mantenimiento.loc
    
    # Logs
    ErrorLog ${APACHE_LOG_DIR}/mantenimiento-error.log
    CustomLog ${APACHE_LOG_DIR}/mantenimiento-access.log combined
    
    # Directorio raíz de los archivos estáticos
    DocumentRoot /var/www/mantenimiento
    
    # Proxy HTTP para la API
    ProxyRequests Off
    ProxyPreserveHost On
    ProxyVia Block
    
    # Configuración del proxy para la API
    <Location /api>
        ProxyPass http://localhost:3001/api
        ProxyPassReverse http://localhost:3001/api
    </Location>
    
    # Configuración del proxy para Socket.IO
    <Location /socket.io>
        ProxyPass http://localhost:3001/socket.io
        ProxyPassReverse http://localhost:3001/socket.io
        
        # Configuración para WebSockets
        RewriteEngine On
        RewriteCond %{HTTP:Upgrade} =websocket [NC]
        RewriteRule /(.*)  ws://localhost:3001/$1 [P,L]
    </Location>
    
    # Para cualquier otra ruta, servimos el index.html del frontend
    <Directory /var/www/mantenimiento>
        Options Indexes FollowSymLinks
        AllowOverride All
        Require all granted
        
        # Activar el motor de reescritura
        RewriteEngine On
        
        # Si el archivo o directorio solicitado existe, úsalo directamente
        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        
        # Para todas las demás solicitudes, redirigir a index.html
        RewriteRule ^ index.html [QSA,L]
    </Directory>
    
    # Headers para CORS
    Header always set Access-Control-Allow-Origin "*"
    Header always set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
    Header always set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization"
    Header always set Access-Control-Allow-Credentials "true"
    
    # Manejar OPTIONS preflight
    RewriteEngine On
    RewriteCond %{REQUEST_METHOD} OPTIONS
    RewriteRule ^(.*)$ $1 [R=200,L]

    # Sugerencia: Para mejorar la experiencia UI/UX, puedes agregar compresión y cacheo de recursos estáticos
    # Enable compression for static assets
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json

    # Cache static assets for better performance
    <IfModule mod_expires.c>
        ExpiresActive On
        ExpiresByType image/jpg "access plus 1 year"
        ExpiresByType image/jpeg "access plus 1 year"
        ExpiresByType image/gif "access plus 1 year"
        ExpiresByType image/png "access plus 1 year"
        ExpiresByType text/css "access plus 1 month"
        ExpiresByType application/pdf "access plus 1 month"
        ExpiresByType text/javascript "access plus 1 month"
        ExpiresByType application/javascript "access plus 1 month"
        ExpiresByType application/x-javascript "access plus 1 month"
        ExpiresByType image/x-icon "access plus 1 year"
        ExpiresDefault "access plus 2 days"
    </IfModule>
</VirtualHost> 